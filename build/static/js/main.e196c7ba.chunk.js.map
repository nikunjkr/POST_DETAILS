{"version":3,"sources":["api/index.js","actions/Posts.js","components/Posts/Post/styles.js","components/Posts/Post/Post.js","components/AddComment/AddComment.js","components/Comment/Comment.js","components/CommentList/CommentList.js","components/PleaseLogin.js","logo.png","App.js","reducers/Posts.js","reducers/Comments.js","reducers/Thread.js","reducers/User.js","reducers/index.js","index.js"],"names":["API","axios","create","baseURL","interceptors","request","use","req","headers","Authorization","Cookies","get","upvoteComment","comment_id","updown","put","createComment","postid","Comment","post","getThread","getPostComments","post_id","dispatch","a","data","console","log","type","payload","comment","api","makeStyles","media","height","paddingTop","backgroundColor","backgroundBlendMode","margin","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","mx","width","padding","overlay","top","left","color","overlay2","right","grid","details","title","cardActions","Post","classes","useStyles","Card","className","CardHeader","avatar","Avatar","aria-label","src","user_image","name","Typography","variant","component","image_link","CardMedia","image","Title","caption","timePosted","CardActions","Button","size","onClick","localStorage","setItem","window","location","assign","noofcomments","AddComment","props","username","useSelector","state","User","Name","up_level_cid","useDispatch","useState","setComment","handleAddComment","e","preventDefault","commentAs","TextField","id","label","multiline","rows","fullWidth","onChange","event","value","target","comments","Comments","onecomment","Thread","find","upvoteButtonColor","downvoteButtonColor","upordown","Paper","style","marginTop","spacing","Grid","container","wrap","item","alt","xs","zeroMinWidth","textAlign","timeCommented","IconButton","upVotes","downVotes","CommentList","useEffect","posts","Posts","i","length","push","sort","b","map","key","sm","PleaseLogin","App","href","logo","reducer","action","reducers","combineReducers","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e196c7ba.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nconst API = axios.create({ baseURL: 'https://ec2-52-206-109-241.compute-1.amazonaws.com/team2practo' });\r\n\r\nAPI.interceptors.request.use((req) => {\r\n//   if (localStorage.getItem('profile')) {\r\n    // req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\r\n    // Cookies.set('access_control_token_cookie_skinder','eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiIxMTYxMTc2NTcyNDE2MzgzNjM2NDkiLCJlbWFpbCI6Im5pa3VuamtyMDc4QGdtYWlsLmNvbSIsImlhdCI6MTYxMzkzMjYyOCwiZXhwIjoxNjEzOTM2MjI4fQ.YtueonU2YL1t1-X1_qity-RXLNQQfQZUoG7mU4i5C0c')\r\n     req.headers.Authorization = Cookies.get('access_control_token_cookie_skinder');\r\n    // req.headers.Authorization = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiIxMTYxMTc2NTcyNDE2MzgzNjM2NDkiLCJlbWFpbCI6Im5pa3VuamtyMDc4QGdtYWlsLmNvbSIsImlhdCI6MTYxMzkzODY2NiwiZXhwIjoxNjEzOTQyMjY2fQ.hVJs-wCsSN93U3fst6ugLnsSa9BYZ4xjVyVbSpQionQ\";\r\n//   }\r\n\r\n\r\n  return req;\r\n});\r\n\r\n\r\n// export const fetchPosts = () => fetch(url).then(res => res.json())\r\nexport const fetchPosts = () => API.get('/posts');\r\n// export const fetchPosts = () => axios.get(`${url}/posts`');\r\n// export const fetchPostDetails = (postid) => API.get(`${url}/`)\r\nexport const upvoteComment = (comment_id, updown) => API.put('/comments/uord', {'comment_id':comment_id,\r\n    'upordown':updown});\r\n    \r\nexport const getPostComments= (postid) => API.get(`/${postid}/comments`);\r\n\r\n// export const upvoteComment = (comment_id) => API.put('/comments/uord', {'comment_id':comment_id,\r\n//     'upordown':'d'});\r\nexport const createComment =(postid,Comment) => API.post('/comments', {'post_id': postid, 'comment' : Comment});\r\nexport const replyComment =(postid,Comment,up_level_cid) => API.post('/comments', {'post_id': postid, 'comment' : Comment, 'up_level_cid' :up_level_cid});\r\n//  forgot / in beginning\r\nexport const getThread = (comment_id) => API.get(`/comments/${comment_id}/thread`);\r\nexport const getUser =() => API.get(`/users`);\r\n \r\n// export const addPost = (Title,Caption,myFile) => \r\n   \r\n//     API.post('/posts', {'Title':Title, 'Caption':Caption, 'myFile':myFile });\r\n    export const addPost = (formData) =>  API.post('/posts', formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data'\r\n    }});\r\n\r\n","import * as api from \"../api/index.js\";\r\n\r\n// action creaters return actions\r\n// default keyword showed error\r\nexport const getPosts = () => async (dispatch) => {\r\n    try {\r\n        const {data} = await api.fetchPosts();\r\n        // console.log(data,\"secret\");\r\n        dispatch({type:'FETCH_ALL' , payload: data});\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n// return actions;\r\n}\r\nexport const getPostComments = (post_id) => async (dispatch) => {\r\n    try{\r\n        const {data} =await api.getPostComments(post_id);\r\n        console.log(\"call\", data);\r\n        dispatch({type:'GET_POST_COMMENTS', payload: data});\r\n    } catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\nexport const createComment = (postid,comment) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.createComment(postid,comment);\r\n    console.log(data,\"secret\");\r\n    dispatch({ type: 'CREATE_COMMENT', payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const replyComment = (postid,comment,up_level_cid) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.createComment(postid,comment,up_level_cid);\r\n    console.log(data,\"secret\");\r\n    dispatch({ type: 'REPLY_COMMENT', payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const upvoteComment = (comment_id,updown) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.upvoteComment(comment_id, updown);\r\n    console.log(data)\r\n    dispatch({ type: 'UPVOTE_COMMENT', payload: data });\r\n  } catch (error) {\r\n    console.log(\"error in upvote comments\");\r\n  }\r\n};\r\n\r\n// export const downvoteComment = (comment_id) => async (dispatch) => {\r\n//   try {\r\n//     const { data } = await api.upvoteComment(comment_id);\r\n\r\n//     dispatch({ type: 'DOWNVOTE_COMMENT', payload: data });\r\n//   } catch (error) {\r\n//     console.log(error);\r\n//   }\r\n// };\r\nexport const getThread = (comment_id) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getThread(comment_id);\r\n    console.log(\"thread data\",data);\r\n    dispatch({ type: 'GET_THREAD', payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const getUser = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getUser();\r\n    // console.log(\"thread data\",data);\r\n    dispatch({ type: 'GET_USER', payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const addPost = (formData) => async (dispatch) => {\r\n  try {\r\n    \r\n    const { data } = await api.addPost(formData);\r\n    console.log(\"thread data\",data);\r\n    dispatch({ type: 'ADD_POST', payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    backgroundBlendMode: 'darken',\r\n    margin:\"10px\"\r\n  },\r\n  border: {\r\n    border: 'solid',\r\n  },\r\n  fullHeightCard: {\r\n    height: '100%',\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    borderRadius: '15px',\r\n    height: '100%',\r\n    position: 'relative',\r\n    mx:\"200px\",\r\n    width:\"75%\",\r\n    padding:\"20px\"\r\n  },\r\n  overlay: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    left: '20px',\r\n    color: 'white',\r\n  },\r\n  overlay2: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    right: '20px',\r\n    color: 'white',\r\n  },\r\n  grid: {\r\n    display: 'flex',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    margin: '20px',\r\n  },\r\n  title: {\r\n    padding: '0 16px',\r\n  },\r\n  cardActions: {\r\n    padding: '0 16px 8px 16px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n});","import React, { useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\r\nimport ThumbDownAltIcon from \"@material-ui/icons/ThumbDownAlt\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n} from \"@material-ui/core/\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\n\r\nimport { Divider, Avatar, Grid, Paper } from \"@material-ui/core\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst Post = ({ post }) => {\r\n  const classes = useStyles();\r\n  const postid = post?.post_id;\r\n\r\n  console.log(post);\r\n  return (\r\n    <>\r\n    {/* <img src={post?.image_link} alt=\"\"></img> */}\r\n    <Card className={classes}>\r\n      \r\n      <CardHeader\r\n        avatar={\r\n          <Avatar\r\n            aria-label=\"recipe\"\r\n            className={classes.avatar}\r\n            src={post?.user_image}\r\n          ></Avatar>\r\n        }\r\n        title={post?.name}\r\n      ></CardHeader>\r\n      {/* {console.log(post?.Post_Id)} */}\r\n      {/* {console.log(JSON.parse(post.Title))} */}\r\n      <div className=\"post__header\">\r\n        {/* <h4 className=\"post__header__username\">Posted by {post?.name}</h4> */}\r\n\r\n        {/* commented */}\r\n        {/* <IconButton className=\"post__header__upvote\">\r\n          <ThumbUpAltIcon />\r\n        </IconButton>\r\n        {post?.upvotes - post?.downvotes}\r\n        <IconButton className=\"post__header__downvote\">\r\n          <ThumbDownAltIcon />\r\n        </IconButton> */}\r\n      </div>\r\n      <Typography variant=\"h4\" component=\"h4\">\r\n        {post?.title}\r\n      </Typography>\r\n\r\n      \r\n      {post?.image_link !== \"\" ? (\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={post?.image_link}\r\n          title={post?.Title}\r\n        />\r\n      ) : (\r\n        <CardMedia title={post?.Title} />\r\n      )}\r\n\r\n      {/* \r\n          (<CardMedia\r\n          className={classes.media}\r\n          image={post?.image_link}\r\n          title={post?.Title}\r\n\r\n        /> */}\r\n\r\n      {/* <Link to=\"/:postid/comments\">Comments</Link> */}\r\n\r\n      {/* <h3>{post.name}</h3> */}\r\n      {/* <img src={post.user_image} alt=\"Loading\"></img> */}\r\n\r\n      <h4>{post?.caption}</h4>\r\n      {/* <h3>{post?.image_Link}</h3> */}\r\n\r\n      <h3>{post?.timePosted}</h3>\r\n\r\n      <CardActions>\r\n        <Button\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            localStorage.setItem(\"post_id\", { postid });\r\n            window.location.assign(`/${postid}/comments`);\r\n          }}\r\n        >\r\n          {post?.noofcomments} Comments\r\n        </Button>\r\n        <form></form>\r\n        {/* <Link to=\"/\"></Link> */}\r\n      </CardActions>\r\n    </Card>\r\n  </>)\r\n};\r\n\r\nexport default Post;\r\n","import React, { useEffect } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { HouseRounded } from \"@material-ui/icons\";\r\nimport { useState } from \"react\";\r\nimport {createComment, getPostComments} from '../../actions/Posts'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\n\r\nconst AddComment = (props) => {\r\n\r\n  const getUsername = state => state.User?.Name; \r\n\r\n  const username =useSelector(getUsername);\r\n\r\n  console.log(props.post?.post_id,\"adding comments\")\r\n  const postid=props.post?.post_id;\r\n  const up_level_cid=props.up_level_cid;\r\n  console.log(up_level_cid);\r\n  const dispatch = useDispatch();\r\n\r\n  const [comment, setComment] = useState('');\r\n\r\n  const clear = () => {\r\n    setComment('');\r\n  };\r\n\r\n  const handleAddComment = async(e) => {\r\n    e.preventDefault();\r\n    dispatch(createComment( postid, comment));\r\n    dispatch(getPostComments(postid))\r\n    clear();\r\n  }\r\n  const commentAs= \"Comment as \" + username\r\n\r\n  // useEffect(()=>{ \r\n  //   handleAddComment();\r\n  // },)\r\n  return (\r\n    <>\r\n      <TextField\r\n        id=\"outlined-multiline-static\"\r\n        margin=\"normal\"\r\n        label={commentAs}\r\n        multiline\r\n        rows={4}\r\n        // defaultValue=\"Default Value\"\r\n        variant=\"outlined\"\r\n        size=\"medium\"\r\n        fullWidth\r\n        onChange={event => {\r\n          const { value } = event.target;\r\n          setComment(value )}}\r\n        value={comment}\r\n      />\r\n     \r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleAddComment}>\r\n        Comment\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddComment;\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Divider,\r\n  Avatar,\r\n  Grid,\r\n  Paper,\r\n  CircularProgress,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\r\nimport { getPostComments, getThread } from \"../../actions/Posts\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Post from \"../Posts/Post/Post\";\r\nimport Posts from \"../Posts/Posts\";\r\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\r\nimport ThumbDownAltIcon from \"@material-ui/icons/ThumbDownAlt\";\r\nimport moment from \"moment\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\r\n\r\nimport { upvoteComment } from \"../../actions/Posts\";\r\n\r\nimport AddComment from \"../AddComment/AddComment\";\r\nimport { get } from \"js-cookie\";\r\n\r\nconst Comment = (props) => {\r\n\r\n  const comment = props.comment?.comment_id;\r\n\r\n  // const [upOrDown, setUporDown] = useState(\"\");\r\n  \r\n\r\n  const post_id = props.comment?.post_id;\r\n\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n   const comments = useSelector((state) => {\r\n    console.log(\"h\", state);\r\n    return state.Comments;\r\n  });\r\n  const threads = useSelector((state) => {\r\n    console.log(\"h\", state.Thread);\r\n    return state.Thread;\r\n  });\r\n\r\n  const onecomment = comments.find(\r\n    (onecomment) => onecomment.comment_id === comment\r\n  );\r\n\r\n    const handleUpvote = () => {\r\n    dispatch(upvoteComment(props.comment?.comment_id, \"u\"));\r\n    dispatch(getPostComments(post_id))\r\n    dispatch(getThread(props.comment?.comment_id))\r\n    \r\n  };\r\n  const handleDownVote = () => {\r\n    dispatch(upvoteComment(props.comment?.comment_id, \"d\"));\r\n    dispatch(getPostComments(post_id))\r\n    dispatch(getThread(comment))\r\n    console.log(\"downvote\")\r\n  };\r\n\r\n  //   const comments = useSelector((state) => {\r\n  //   console.log(\"haha\", state);\r\n  //   return state.Comments;\r\n  // });\r\n\r\n  // const onecomment = comments.find(\r\n  //   (onecomment) => onecomment.comment_id === comment\r\n  // );\r\n\r\n  //commented\r\n  // useEffect(() => {\r\n  //   // dispatch(getPostComments(post_id));\r\n  //   // console.log(post_id);\r\n    \r\n  // }, [dispatch, post_id]);\r\n\r\n\r\n  // console.log(onecomment, \"1\");\r\n\r\n  \r\n\r\n  /////////////////////// i missed s in Comments\r\n  //  const comments = useSelector(state => state.Comment);\r\n\r\n  // var upvoteButtonColor = \"default\";\r\n  // var downvoteButtonColor = \"default\";\r\n  // if (upOrDown === \"u\") {\r\n  //   upvoteButtonColor = \"primary\";\r\n  //   downvoteButtonColor = \"default\";\r\n  // } else if (upOrDown === \"d\") {\r\n  //   downvoteButtonColor = \"secondary\";\r\n  //   upvoteButtonColor = \"default\";\r\n  // }\r\n  console.log(\"iiiiiii\")\r\n   var upvoteButtonColor = \"default\";\r\n  var downvoteButtonColor = \"default\";\r\n  if (onecomment.upordown ===\"u\") {\r\n    upvoteButtonColor = \"primary\";\r\n    downvoteButtonColor = \"default\";\r\n  } else if (onecomment.upordown === \"d\") {\r\n    downvoteButtonColor = \"secondary\";\r\n    upvoteButtonColor = \"default\";\r\n  }\r\n  // const [upvoteButtonColor,setupvoteButtonColor] =useState('default')\r\n  // const [downvoteButtonColor,setdownvoteButtonColor] =useState('default')\r\n  // // var upvoteButtonColor = \"default\";\r\n  // // var downvoteButtonColor = \"default\";\r\n  // if (onecomment.upordown ==\"u\") {\r\n  //   setupvoteButtonColor(\"primary\");\r\n  //   setdownvoteButtonColor(\"default\");\r\n  // } else if (onecomment.upordown == \"d\") {\r\n  //   setdownvoteButtonColor(\"secondary\");\r\n  //   setupvoteButtonColor(\"default\");\r\n  // }\r\n\r\n\r\n  // useEffect(()=>{\r\n\r\n  //   dispatch(getPostComments(post_id))\r\n  //   console.log(\"useEffect in comments\")\r\n  // },[dispatch,props.comment?.comment_id,post_id]);\r\n\r\n  // console.log(props, \"inside comments\");\r\n\r\n\r\n  return (\r\n    <Paper style={{ padding: \"10px 5px\", marginTop: 10, spacing: 3 }}>\r\n      <Grid id=\"comment-grid\" container wrap=\"nowrap\" spacing={2}>\r\n        <Grid item>\r\n          <Avatar alt=\"Remy Sharp\" src={props?.comment?.user_image} />\r\n        </Grid>\r\n\r\n        <Grid justifyContent=\"left\" item xs zeroMinWidth>\r\n          <h4 style={{ margin: 0, textAlign: \"left\" }}>\r\n            {props.comment?.name   }{   }\r\n            {/* {props.comment?.timeCommented} */}\r\n          </h4>\r\n          <p style={{ textAlign: \"left\", color: \"gray\" }}>\r\n            {/* {moment(props.comment?.timeCommented).fromNow()} */}\r\n            {props.comment?.timeCommented}\r\n          </p>\r\n          <p style={{ textAlign: \"left\" }}>{props?.comment?.comment}</p>\r\n\r\n\r\n          <IconButton className=\"post__header__upvote\" onClick={handleUpvote}>\r\n            <ThumbUpAltIcon color={upvoteButtonColor} />\r\n          </IconButton>\r\n\r\n          {onecomment.upVotes - onecomment.downVotes}\r\n\r\n\r\n          <IconButton\r\n            className=\"post__header__downvote\"\r\n            onClick={handleDownVote}\r\n          >\r\n           <ThumbDownAltIcon color={downvoteButtonColor} />\r\n\r\n          </IconButton>\r\n          \r\n        </Grid>\r\n      </Grid>\r\n      {/* <h3>Thread</h3> */}\r\n      <Button\r\n        size=\"small\"\r\n        color=\"black\"\r\n        onClick={() => {\r\n          localStorage.setItem(\"post_id\", props.comment?.post_id);\r\n          // dispatch(getPostComments(post_id))\r\n           dispatch(getThread(comment))\r\n          window.location.assign(\r\n           \r\n            \r\n            `/comments/${props.comment?.comment_id}/thread`\r\n          );\r\n        }}\r\n      >\r\n        View Thread\r\n      </Button>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  Divider,\r\n  Avatar,\r\n  Grid,\r\n  Paper,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\r\nimport { getPostComments } from \"../../actions/Posts\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Post from \"../Posts/Post/Post\";\r\nimport Posts from \"../Posts/Posts\";\r\nimport AddComment from \"../AddComment/AddComment\";\r\nimport Comment from \"../Comment/Comment\";\r\nimport { LocalFlorist } from \"@material-ui/icons\";\r\nimport commentList from './CommentList';\r\n\r\n\r\nconst CommentList = () => {\r\n\r\n  // neelesh id require post id \r\n  const id =4\r\n  // const id = match.params.postid;\r\n  //   const posts = useSelector((state) => state.Posts);\r\n\r\n  const dispatch = useDispatch();\r\n  // dispatch(getPostComments(id));\r\n\r\n  /// check if \r\n\r\n  \r\n  var post = null;\r\n  var comment = [];\r\n\r\nconst comments = useSelector((state) => state.Comments);\r\n\r\n  useEffect(() => {\r\n    dispatch(getPostComments(id));\r\n    // console.log(\"dispatching getPostComments\");\r\n  }, [ dispatch, id]);\r\n\r\n\r\n\r\n  // const comments = useSelector((state) => state.Comments);\r\n  const posts = useSelector((state) => state.Posts);\r\n  \r\n\r\n  // console.log(comments, \"Heare are comments\");\r\n  \r\n  for (let i = 0; i < posts.length; i++) {\r\n    if (posts[i]?.post_id == id) {\r\n      post = posts[i];\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < comments.length; i++) {\r\n    if (comments[i]?.post_id == id) {\r\n      comment.push(comments[i]);\r\n    }\r\n  }\r\n\r\n  comment.sort((a, b) => (a?.timePosted > b?.timePosted ? -1 : 1));\r\n \r\n \r\n  return (\r\n    <>\r\n    <div style={{  padding: 50 }} className=\"App\">\r\n      <Grid container spacing={3} >\r\n         <Grid item xs={9}>\r\n        {/* !post ? <CircularProgress />:  */}\r\n\r\n        <Post post={post} />\r\n\r\n        <AddComment post ={post} />\r\n\r\n      </Grid>\r\n      </Grid>\r\n     \r\n      {comment.map((comment, key) => (\r\n        <Grid key={key} item xs={9} sm={6}>\r\n          <Comment comment={comment} />\r\n        </Grid>\r\n\r\n      ))}\r\n\r\n      {/* <CreatePost/> */}\r\n     \r\n    </div>\r\n    </>\r\n  );\r\n};\r\nexport default CommentList;\r\n","import React from 'react'\r\n\r\nfunction PleaseLogin() {\r\n    return (\r\n        <div>\r\n            <h1>Your are not logged in</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PleaseLogin","export default __webpack_public_path__ + \"static/media/logo.7c0ee393.png\";","import React, {useEffect} from \"react\";\nimport './App.css';\nimport Cookies from 'js-cookie';\n\nimport CommentList from './components/CommentList/CommentList'\n// import {Container, AppBar, Typography} from \"@material-ui/core\"\n;\nimport {useDispatch} from \"react-redux\"\nimport {getPosts, getUser} from './actions/Posts';\nimport PleaseLogin from './components/PleaseLogin'\n\nimport logo from './logo.png'\n\nconst App = () => {\n\n  // console.log(store);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // forgot to call\n    dispatch(getPosts());\n    dispatch(getUser());\n    console.log(\"Dispatching\");\n  }, [dispatch]);\n\n  return (\n    <>\n    <div className=\"app__header\">\n          <a href=\"https://skinder-5d70f.web.app/\"> <img className=\"app__headerImage\" src={logo} alt=\"Logo\"/></a>\n\n\n      </div>\n    <div className=\"app\">\n      {Cookies.get('access_control_token_cookie_skinder') ?<CommentList/> :<PleaseLogin/>}\n      \n    </div>\n    </>\n  )\n    \n    \n  \n}\n\nexport default App;\n","// reducer is function which accepts a state and an action\r\n\r\nconst reducer = (Posts=[], action) => {\r\n    switch(action.type) {\r\n        case 'ADD_POST':\r\n            return [...Posts, action.payload];\r\n        case 'FETCH_ALL':\r\n            return action.payload ;\r\n        // case 'GET_POST_COMMENTS':\r\n        //     return action.payload;\r\n        default:\r\n            return Posts;\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","const reducer = (Comments= [], action) => {\r\n    switch(action.type) {\r\n        case 'GET_POST_COMMENTS':\r\n            return  action.payload ;\r\n        case 'CREATE':\r\n            return [...Comments, action.payload] ;\r\n        case 'UPVOTE_COMMENT':\r\n            return Comments ;\r\n        case 'DOWNVOTE_COMMENT':\r\n            return Comments;\r\n        // case 'GET_THREAD':\r\n        //     return action.payload;\r\n        default:\r\n            return Comments;\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","const reducer = (Thread=[], action) => {\r\n    switch(action.type) {\r\n        \r\n        case 'GET_THREAD':\r\n            return action.payload;\r\n\r\n        case 'REPLY_COMMENT':\r\n            return Thread;\r\n        default:\r\n            return Thread;\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","\r\n\r\nconst reducer = (User=[], action) => {\r\n    switch(action.type) {\r\n        case 'GET_USER':\r\n            return action.payload ;\r\n        // case 'GET_POST_COMMENTS':\r\n        //     return action.payload;\r\n        default:\r\n            return User;\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","// Step 2\r\nimport {combineReducers} from \"redux\";\r\nimport Posts from \"./Posts\"\r\nimport Comments from \"./Comments\"\r\nimport Thread from \"./Thread\"\r\nimport User from \"./User\"\r\nexport const reducers = combineReducers ({\r\n    Posts :Posts,\r\n    Comments:Comments,\r\n    Thread:Thread,\r\n    User:User,\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider } from \"react-redux\";\nimport {createStore, applyMiddleware, compose} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {reducers} from \"./reducers\"\n\n// STORE -->global state\n// to set up redux create a store\n\n//  Step 1 \nconst store = createStore(reducers, compose(applyMiddleware(thunk)))\n\n// ACTION INCREMENT\n\n// Reducer\n\n// Dispach dispach this action to reducer store gets update\n//donot forget to pass store props\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}